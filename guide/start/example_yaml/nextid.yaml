name: MH Cluster Test (propagated.to.members)

location: aws-ec2:eu-west-1

services:
- type: org.apache.brooklyn.entity.group.DynamicCluster
  name: Cluster
  id: cluster

  brooklyn.initializers:
  # Step 1. Override the `next.cluster.member.id` supplier with a new one starting at 100
  - type: org.apache.brooklyn.core.sensor.StaticSensor
    brooklyn.config:
      name: next.cluster.member.id
      targetType: com.google.common.base.Supplier
      static.value:
        $brooklyn:object:
          type: org.apache.brooklyn.util.guava.Suppliers
          factoryMethod.name: incrementing
          factoryMethod.args:
          - 100
  brooklyn.enrichers:
  # Step 3. Aggregate the formatted member server ids into a list (java.util.List) on the cluster
  - type: org.apache.brooklyn.enricher.stock.Aggregator
    brooklyn.config:
      fromMembers: true
      enricher.aggregator.excludeBlank: true
      enricher.sourceSensor: $brooklyn:sensor("server.id.formatted")
      enricher.targetSensor: $brooklyn:sensor("server.ids")
  # Step 4. Join the formatted member server ids into a string. This assumes the "\n" is appended in step 2.
  # Using `enricher.joiner.separator: "\n"` does not work here as it is quashed by the YAML parser.
  # Also, `excludeBlank` and `minimum` are crucial. This ensures that any attempt to read this value blocks
  # until all members of the cluster have been provisioned (i.e. their `host.name` attribute is available)
  - type: org.apache.brooklyn.enricher.stock.Joiner
    brooklyn.config:
      enricher.aggregator.excludeBlank: true
      enricher.joiner.minimum: 3
      enricher.joiner.quote: false
      enricher.joiner.separator: ""
      enricher.sourceSensor: $brooklyn:sensor("server.ids")
      enricher.targetSensor: $brooklyn:sensor("server.ids.joined")
  brooklyn.config:
    cluster.initial.size: 3
    dynamiccluster.memberspec:
      $brooklyn:entitySpec:
        type: server
        brooklyn.config:
          templates.customize:
            /tmp/someconf.config: someconf.config
        brooklyn.initializers:
        # Step 2. Publish the formatted `server.id` as a string sensor on the member entities. Note the "\n" at the end
        - type: org.apache.brooklyn.core.sensor.StaticSensor
          brooklyn.config:
            name: server.id.formatted
            static.value:
              $brooklyn:formatString:
              - server.%s=%s:%s:%s%s
              - $brooklyn:config("cluster.member.id")
              - $brooklyn:attributeWhenReady("host.name")
              - $brooklyn:attributeWhenReady("application.id")
              - $brooklyn:attributeWhenReady("entity.id")
              - "\n"
        brooklyn.enrichers:
        # Step 5. Propagate the joined server ids from the cluster down to the members. This makes it easier to reference in the
        # templated config file
        - type: org.apache.brooklyn.enricher.stock.Propagator
          brooklyn.config:
            producer: $brooklyn:entity("cluster")
            propagating:
            - $brooklyn:sensor("server.ids.joined")